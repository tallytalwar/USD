name: Reusable BuildUSD

on:
  workflow_call:
    inputs:
      artifact_name:
        required: true
        type: string
      os:
        required: true
        type: string
      python_version:
        required: true
        type: string
      install_dependencies:
        required: true
        type: string
      build_usd:
        required: true
        type: string

jobs:
  GetUser:
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    outputs:
      require-result: ${{ steps.check.outputs.require-result }}
    steps:
      - uses: actions-cool/check-user-permission@v2
        id: check
        with:
          require: 'write'
          username: ${{ github.event.comment.user.login }}
  GetGitRef:
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    outputs:
      ref: ${{ steps.setter.outputs.ref }}
    steps:
      - name: Get push ref
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "REF=${{ github.ref }}" >> $GITHUB_ENV
      - name: Get PR ref
        if: ${{ github.event.issue.pull_request }}
        run: |
          echo "REF=refs/pull/${{ github.event.issue.number }}/merge" >> $GITHUB_ENV
      - name: Print ENV_VAR
        run: |
          echo "The value of REF is $REF"
      - name: Set ENV_VAR
        id: setter
        run: |
          echo "ref=$REF" >> "$GITHUB_OUTPUT"
  BuildUSD:
    needs: [GetUser, GetGitRef]
    if: ${{ (github.event.issue.pull_request && contains(github.event.comment.body, '/AzurePipelines run') && needs.GetUser.outputs.require-result == 'true' ) || github.event_name == 'push' }}
    runs-on: ${{ inputs.os }}
    timeout-minutes: 120
    steps:
      - run: echo ${{ needs.GetUser.outputs.require-result }}
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{needs.GetGitRef.outputs.ref}}
      - name: Restore cached artifacts
        id: cache-usd-build-dependency
        uses: actions/cache/restore@v4
        with:
          path: |
            USDinst
          key: ${{ runner.os }}-BuildUSD-py${{ inputs.python_version }}-${{ hashFiles('build_scripts/**/*') }}
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}
          check-latest: false
      - name: Install dependencies
        run: |
          ${{ inputs.install_dependencies }}
      - name: Build USD
        run: |
          ${{ inputs.build_usd }}
      - name: Save build artifacts to cache
        if: steps.cache-usd-build-dependency.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            USDinst
          key: ${{ runner.os }}-BuildUSD-py${{ inputs.python_version }}-${{ hashFiles('build_scripts/**/*') }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: USDinst
